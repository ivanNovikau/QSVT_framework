// ../../../framework/build_oracle/oracletool adder ./ 


// add one variable encoded to a bit string of size <n>
// to another variable of the SAME size;
// the register "a" encodes the first variable v1;
// the register "b" encodes the second variable v2;
// the register "c" encodes the caryy out bits;
// OUTPUT: the bits [b[:], c[0]] encode the sum v1 + v2;  

CONSTANTS
	n 2
END_CONSTANTS


CIRCUITS_DECLARATION
	U   4  cc 1 0 c <n> 0 b <n> 0 a <n> 0 
END_CIRCUITS_DECLARATION


OPTIONS
    sel_compute_output all
	sel_print_output   all  // none, all, zero-ancillae
	flag_circuit 0 
	flag_tex     0
	tex_CL  10 
END_OPTIONS


// MAIN_CIRCUIT   U         
// 	INPUT_STATE 2   b 0 a 0       
// 	INPUT_STATE 2   b 0 a 1       
// 	INPUT_STATE 2   b 1 a 0     
// 	INPUT_STATE 2   b 1 a 1     
// END_MAIN_CIRCUIT


MAIN_CIRCUIT   U    
	INPUT_STATE 2   b 0 a 0       
	INPUT_STATE 2   b 0 a 1       
	INPUT_STATE 2   b 0 a 2     
	INPUT_STATE 2   b 0 a 3  

	INPUT_STATE 2   b 1 a 0       
	INPUT_STATE 2   b 1 a 1       
	INPUT_STATE 2   b 1 a 2     
	INPUT_STATE 2   b 1 a 3  

	INPUT_STATE 2   b 2 a 0       
	INPUT_STATE 2   b 2 a 1       
	INPUT_STATE 2   b 2 a 2     
	INPUT_STATE 2   b 2 a 3  

	INPUT_STATE 2   b 3 a 0       
	INPUT_STATE 2   b 3 a 1       
	INPUT_STATE 2   b 3 a 2     
	INPUT_STATE 2   b 3 a 3     
END_MAIN_CIRCUIT


// CIRCUIT_STRUCTURE U 
// 	gate adder a -1 b -1 c -1 ocontrol cc 1 end_gate
// END_CIRCUIT_STRUCTURE

CIRCUIT_STRUCTURE U 
	gate subtractor  a -1 b -1 c -1 ocontrol cc 1 end_gate
	// igate subtractor  a -1 b -1 c -1 end_gate

	// gate adder  a -1  b -1  c -1 end_gate

	// gate X b -1 end_gate
	// gate adder  a -1  b -1  c -1 end_gate
	// gate X b -1 end_gate
END_CIRCUIT_STRUCTURE



































 











